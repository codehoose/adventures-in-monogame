using Microsoft.Xna.Framework;
using System.Collections.Generic;

namespace Adventure
{
    internal class GameMap
    {
        public static RoomDescriptor FirstRoom = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            ExitEast = 1,
            ExitWest = 4,
            ExitNorth = 3,
            Seed = 456
        };

        public static RoomDescriptor EastOfFirstRoom = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallEast = true,
            BarrierEastWest = true,
            ExitWest = 0,
            ExitSouth = 2,
            Seed = 258,
        };

        public static RoomDescriptor BlackKeyDragonChamber = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallEast = true,
            WallWest = true,
            ExitNorth = 1,
            Seed = 256
        };

        public static RoomDescriptor YellowCastle = new RoomDescriptor
        {
            ExitNorth = 9,
            ExitSouth = 0,
            WallSouth = true,
            ColourTint = Color.Yellow,
            Seed = 5,
            Key = "YellowKey",
            Visuals = new int[]
            {
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 59, 0, 0, 59, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 58, 41, 41, 41, 41, 41, 41, 60, 0, 0, 0, 0, 37, 38, 38, 38, 58, 30, 41, 41, 41, 41, 30, 60, 38, 38, 38, 39, 37, 0, 0, 0, 58, 41, 41, 41, 41, 41, 41, 60, 0, 0, 0, 39, 37, 0, 0, 0, 58, 29, 41, 41, 41, 41, 29, 60, 0, 0, 0, 39, 37, 0, 0, 0, 58, 41, 41, 0, 0, 41, 41, 60, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            },
            NorthExit = new int[]
            {
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            },
            Collisions = new int[]
            {
                0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            }
        };

        public static RoomDescriptor OutsideMazeEntrance = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallWest = true,
            BarrierEastWest = true,
            ExitEast = 0,
            ExitWest = 0,
            ExitNorth = 5,
            Seed = 452
        };

        public static RoomDescriptor MazeEntrance = new RoomDescriptor
        {
            ExitEast = 6,
            ExitWest = 6,
            ExitNorth = 5,
            ExitSouth = 4,
            Seed = 400,
            Visuals = new int[]
            {

            },
            Collisions = new int[]
            {
                1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1
            }
        };

        public static RoomDescriptor MazeMidColumn = new RoomDescriptor
        {
            ExitEast = 5,
            ExitWest = 5,
            ExitNorth = 8,
            ExitSouth = 7,
            Seed = 119,
            Visuals = new int[]
            {

            },
            Collisions = new int[]
            {
                1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1
            }
        };

        public static RoomDescriptor MazeBottomColumn = new RoomDescriptor
        {
            ExitEast = 5,
            ExitWest = 5,
            ExitNorth = 6,
            ExitSouth = -1,
            Seed = 1024,
            Visuals = new int[]
            {
                41, 41, 41, 41, 41, 41, 41, 0, 0, 41, 41, 41, 41, 41, 41, 41, 0, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 0, 0, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 41, 0, 0, 0, 0, 0, 41, 0, 0, 41, 0, 0, 0, 0, 0, 41, 41, 0, 0, 0, 0, 0, 41, 0, 0, 41, 0, 0, 0, 0, 0, 41, 41, 41, 41, 41, 0, 0, 41, 0, 0, 41, 0, 0, 41, 41, 41, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 41, 41, 41, 0, 0, 0, 0, 0, 0, 0, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41
            },
            Collisions = new int[]
            {
                1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
            }
        };

        public static RoomDescriptor BlackCastle = new RoomDescriptor
        {
            ExitNorth = 10,
            ExitSouth = 6,
            WallSouth = true,
            ColourTint = Color.DarkGray,
            Key = "BlackKey",
            Seed = 9,
            Visuals = new int[]
                    {
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 59, 0, 0, 59, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 58, 41, 41, 41, 41, 41, 41, 60, 0, 0, 0, 0, 37, 38, 38, 38, 58, 30, 41, 41, 41, 41, 30, 60, 38, 38, 38, 39, 37, 0, 0, 0, 58, 41, 41, 41, 41, 41, 41, 60, 0, 0, 0, 39, 37, 0, 0, 0, 58, 29, 41, 41, 41, 41, 29, 60, 0, 0, 0, 39, 37, 0, 0, 0, 58, 41, 41, 0, 0, 41, 41, 60, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    },
            NorthExit = new int[]
                    {
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    },
            Collisions = new int[]
                    {
                0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                    }
        };

        public static RoomDescriptor SwordChamber = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallEast = true,
            WallWest = true,
            ExitSouth = 3,
            Seed = 128
        };

        public static RoomDescriptor EntranceToChalice = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallEast = true,
            WallWest = true,
            ExitSouth = 8,
            ExitNorth = 11,
            Seed = 111
        };

        public static RoomDescriptor ChaliceChamber = new RoomDescriptor
        {
            WallNorth = true,
            WallSouth = true,
            WallEast = true,
            WallWest = true,
            ExitSouth = 10,
            Seed = 111
        };

        public static Dictionary<int, RoomDescriptor> Map = new Dictionary<int, RoomDescriptor>
        {
            { 0, FirstRoom },
            { 1, EastOfFirstRoom },
            { 2, BlackKeyDragonChamber },
            { 3, YellowCastle },
            { 4, OutsideMazeEntrance },
            { 5, MazeEntrance },
            { 6, MazeMidColumn },
            { 7, MazeBottomColumn },
            { 8, BlackCastle },
            { 9, SwordChamber },
            { 10, EntranceToChalice },
            { 11, ChaliceChamber}
        };
    }
}
